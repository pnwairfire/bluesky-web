# *** This docker-compose.yml is for dev purposes ***
# Note: letting restart policy be the default 'no' so that
#   I don't have to explicity call 'down' to free up web and mongo
#   ports in case I want to switch to running processes manually
#   or with foreman
version: '2'
services:
  rabbit:
    image: bluesky-web-rabbitmq
    container_name: bluesky-web-rabbitmq
    # setting hostname to A) prevent rabbit from
    # crashing between restarts when loading
    # mounted rabbitmq/db/mnesia/ dir, and b) to
    # match ssl cert
    # See https://github.com/docker-library/rabbitmq/issues/6
    hostname: bluesky-web-rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=blueskyweb
        - RABBITMQ_DEFAULT_PASS=blueskywebrabbitpassword
        - RABBITMQ_NODENAME=bluesky-web-rabbitmq
        - RABBITMQ_LOG_BASE=/var/log/rabbitmq/
    ports:
        # we forward 5671 (ssl port) because it's useful for debugging
        - "5887:5671"
        - "15887:15672"  # here, we can access rabbitmq management plugin
    volumes:
    - ./logs/rabbitmq/:/var/log/rabbitmq/
    - ./data/rabbitmq/:/var/lib/rabbitmq/
  mongo:
    image: bluesky-web-mongo
    container_name: bluesky-web-mongo
    # setting hostname to match ssl cert
    hostname: bluesky-web-mongod
    environment:
    # This is the admin user, not the user used by the app
    # to record run information
    - MONGO_INITDB_ROOT_USERNAME=blueskywebadmin
    - MONGO_INITDB_ROOT_PASSWORD=blueskywebmongopasswordadmin
    ports:
    - 27887:27017
    volumes:
    # TODO: figure out permissions issue with mounting log dir
    #- ./logs/mongodb/:/var/log/mongodb/
    - ./data/mongodb/db/:/data/db/
    - ./data/mongodb/configdb/:/data/configdb/
    - ./mongo-entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    # Note: '--auth' is automatically added to command if
    #   MONGO_INITDB_ROOT_[USERNAME|PASSWORD] are set, but we need to
    #   set `command` in order to specify `--logpath`
    command: mongod --auth --logpath /var/log/mongodb/mongodb.log --sslMode requireSSL --sslPEMKeyFile /etc/ssl/bluesky-web-mongod.pem --sslAllowInvalidHostnames
  web1:
    # stdin_open: true
    # tty: true
    image: bluesky-web
    container_name: bluesky-web-1
    volumes:
    - ../:/usr/src/blueskyweb/
    - ./logs/web/:/var/log/blueskyweb/
    - ./config.json:/etc/bluesky-web/config.json
    - /var/run/docker.sock:/var/run/docker.sock
    # Note: output root dir has to be the same on host and in container,
    #   since bsp container will have the same mount
    - ./data/output/:/data/bluesky/output/
    links:
    - mongo
    - rabbit
    # note: log should be in /var/log/blueskyweb/bluesky-web.log, the default
    command: bsp-web -d -o /data/bluesky/output/
      --path-prefix=bluesky-web -p 80
      --mongodb-url=mongodb://blueskyweb:blueskywebmongopassword@mongo/blueskyweb
      --rabbitmq-url=amqps://blueskyweb:blueskywebrabbitpassword@rabbit:5671
      --log-level=DEBUG
      --log-file=/var/log/blueskyweb/bluesky-web.log
      --output-url-scheme=http --output-url-port=8886
      --output-url-path-prefix= --bluesky-log-level=DEBUG
      -c /etc/bluesky-web/config.json
  web2:
    # stdin_open: true
    # tty: true
    image: bluesky-web
    container_name: bluesky-web-2
    volumes:
    - ../:/usr/src/blueskyweb/
    - ./logs/web/:/var/log/blueskyweb/
    - ./config.json:/etc/bluesky-web/config.json
    - /var/run/docker.sock:/var/run/docker.sock
    # Note: output root dir has to be the same on host and in container,
    #   since bsp container will have the same mount
    - ./data/output/:/data/bluesky/output/
    links:
    - mongo
    - rabbit
    # note: log should be in /var/log/blueskyweb/bluesky-web.log, the default
    command: bsp-web -d -o /data/bluesky/output/
      --path-prefix=bluesky-web -p 80
      --mongodb-url=mongodb://blueskyweb:blueskywebmongopassword@mongo/blueskyweb
      --rabbitmq-url=amqps://blueskyweb:blueskywebrabbitpassword@rabbit:5671
      --log-level=DEBUG
      --log-file=/var/log/blueskyweb/bluesky-web.log
      --output-url-scheme=http --output-url-port=8886
      --output-url-path-prefix= --bluesky-log-level=DEBUG
      -c /etc/bluesky-web/config.json
  admin:
    # stdin_open: true
    # tty: true
    image: bluesky-web-admin
    container_name: bluesky-web-admin
    volumes:
    - ../blueskyadmin/svelte.config.js:/blueskyadmin/svelte.config.js
    - ../blueskyadmin/.env:/blueskyadmin/.env
    - ../blueskyadmin/vite.config.js:/blueskyadmin/vite.config.js
    - ../blueskyadmin/src/:/blueskyadmin/src/
    - ../blueskyadmin/static/:/blueskyadmin/static/
    ports:
    - 8882:8882
    command: npm run dev
    links:
    - web1
  nginx:
    container_name: bluesky-web-nginx
    image: bluesky-web-nginx
    ports:
    - 8887:80
    volumes:
    - ./logs/nginx/:/var/log/nginx/
    - ../nginx.conf:/etc/nginx/conf.d/default.conf
    links:
    - web1
    - web2
    - admin
  output_web:
    image: python:3.5-alpine
    container_name: bluesky-web-output
    ports:
    - 8886:8886
    volumes:
    - ./data/output/:/data/bluesky/output/
    working_dir: /data/bluesky/output/
    command: python -m http.server 8886
  worker_plumerise:
    # stdin_open: true
    # tty: true
    image: bluesky-web
    container_name: bluesky-web-worker-plumerise
    hostname: bluesky-web-worker-plumerise
    volumes:
    - ../:/usr/src/blueskyweb/
    - ./logs/worker/all/:/var/log/blueskyworker/
    - ./data/output/:/data/bluesky/output/
    - /var/run/docker.sock:/var/run/docker.sock
    # mount met for ofelia
    # Note: met root dir has to be the same on host and in this container,
    #   since bsp container will have the same mount
    - $HOME/Met/:/data/Met/
    links:
    - mongo
    - rabbit
    environment:
    #- MONGODB_URL=mongodb://blueskyweb:blueskywebmongopassword@localhost:27018/blueskyweb
    - MONGODB_URL=mongodb://blueskyweb:blueskywebmongopassword@mongo/blueskyweb
    - RABBITMQ_URL=amqps://blueskyweb:blueskywebrabbitpassword@rabbit:5671
    - PUBLIC_HOSTNAME=localhost
    command: celery -Q no-met-plumerise,ca-nv_4-km-plumerise,ca-nv_6-km-plumerise,national_12-km-plumerise,pacific_northwest_4-km-plumerise
      -c 5 -A blueskyworker.tasks worker
      -l INFO -f /var/log/blueskyworker/bluesky-web-worker-plumerise.log
  worker:
    # stdin_open: true
    # tty: true
    image: bluesky-web
    container_name: bluesky-web-worker
    hostname: bluesky-web-worker
    volumes:
    - ../:/usr/src/blueskyweb/
    - ./logs/worker/all/:/var/log/blueskyworker/
    - ./data/output/:/data/bluesky/output/
    - /var/run/docker.sock:/var/run/docker.sock
    # mount met for ofelia
    # Note: met root dir has to be the same on host and in this container,
    #   since bsp container will have the same mount
    - $HOME/Met/:/data/Met/
    links:
    - mongo
    - rabbit
    environment:
    #- MONGODB_URL=mongodb://blueskyweb:blueskywebmongopassword@localhost:27018/blueskyweb
    - MONGODB_URL=mongodb://blueskyweb:blueskywebmongopassword@mongo/blueskyweb
    - RABBITMQ_URL=amqps://blueskyweb:blueskywebrabbitpassword@rabbit:5671
    - PUBLIC_HOSTNAME=localhost
    command: celery -Q no-met,ca-nv_4-km,ca-nv_6-km,national_12-km,pacific_northwest_4-km
      -c 5 -A blueskyworker.tasks worker
      -l INFO -f /var/log/blueskyworker/bluesky-web-worker.log
  ofelia:
    image: mcuadros/ofelia
    container_name: bluesky-web-ofelia
    volumes:
    - ./ofelia.ini:/etc/ofelia/config.ini
    - /var/run/docker.sock:/var/run/docker.sock
    #command: ofelia daemon --config /etc/ofelia/config.ini
